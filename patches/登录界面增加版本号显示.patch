Index: app/src/main/res/layout/activity_login_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?><!-- 登陆界面配置 -->\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:id=\"@+id/sv_login_view\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"\r\n    android:background=\"@color/white\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/il_login_top_bg_layout\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_weight=\"3.2\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_login_top_bg\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"fill_parent\"\r\n            android:adjustViewBounds=\"true\"\r\n            android:background=\"@mipmap/login_activity_top_bg\" />\r\n    </LinearLayout>\r\n\r\n    <FrameLayout\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_weight=\"5.3\">\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/ll_login_info_container\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"fill_parent\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <!-- 留白边距 -->\r\n\r\n            <View\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"fill_parent\"\r\n                android:layout_weight=\"1\" />\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/ll_login_user_password\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"fill_parent\"\r\n                android:layout_weight=\"8\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <View\r\n                    android:layout_width=\"fill_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.461\" />\r\n                <!-- 用户名 -->\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/ll_login_useraccount\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.883\"\r\n                    android:background=\"@drawable/login_activity_login_background\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingLeft=\"@dimen/login_inputEditText_PaddingLeft\"\r\n                    android:paddingRight=\"@dimen/login_inputEditText_PaddingRight\">\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/ev_login_useraccount\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"fill_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"@null\"\r\n                        android:drawableLeft=\"@mipmap/login_username\"\r\n                        android:drawablePadding=\"@dimen/login_usericon_padding\"\r\n                        android:gravity=\"center_vertical\"\r\n                        android:hint=\"@string/login_evtext_username\"\r\n                        android:inputType=\"text\"\r\n                        android:maxLines=\"1\"\r\n                        android:singleLine=\"true\"\r\n                        android:textColorHint=\"#666666\"\r\n                        android:textSize=\"@dimen/login_editer_textsize\" />\r\n\r\n                    <ImageButton\r\n                        android:id=\"@+id/login_imgb_clearUsername\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:background=\"@null\"\r\n                        android:src=\"@mipmap/clear\" />\r\n\r\n                    <ImageButton\r\n                        android:id=\"@+id/ib_login_select_account\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:background=\"@null\"\r\n                        android:src=\"@mipmap/login_activity_dropdown_btn\" />\r\n                </LinearLayout>\r\n\r\n                <!-- 留白边距 -->\r\n\r\n                <View\r\n                    android:layout_width=\"fill_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.273\" />\r\n\r\n                <!-- 用户密码 -->\r\n\r\n                <EditText\r\n                    android:id=\"@+id/ev_login_userpassword\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.883\"\r\n                    android:background=\"@drawable/login_activity_login_background\"\r\n                    android:drawableLeft=\"@mipmap/login_password\"\r\n                    android:drawablePadding=\"@dimen/login_usericon_padding\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:hint=\"@string/login_evtext_passowrd\"\r\n                    android:inputType=\"textPassword\"\r\n                    android:maxLines=\"1\"\r\n                    android:paddingLeft=\"@dimen/login_inputEditText_PaddingLeft\"\r\n                    android:singleLine=\"true\"\r\n                    android:textColorHint=\"#666666\"\r\n                    android:textSize=\"@dimen/login_editer_textsize\" />\r\n\r\n                <View\r\n                    android:layout_width=\"fill_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.273\" />\r\n\r\n                <!-- 服务器地址 -->\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/ll_login_servers\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.883\"\r\n                    android:background=\"@drawable/login_activity_login_background\"\r\n                    android:gravity=\"center_vertical\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingLeft=\"@dimen/login_inputEditText_PaddingLeft\"\r\n                    android:paddingRight=\"@dimen/login_inputEditText_PaddingRight\">\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/ev_login_serviceaddress\"\r\n                        android:layout_width=\"fill_parent\"\r\n                        android:layout_height=\"fill_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"@null\"\r\n                        android:drawableLeft=\"@mipmap/login_server_icon\"\r\n                        android:drawablePadding=\"@dimen/login_usericon_padding\"\r\n                        android:gravity=\"center_vertical\"\r\n                        android:hint=\"@string/login_evtext_serviceaddress\"\r\n                        android:inputType=\"text\"\r\n                        android:maxLines=\"1\"\r\n                        android:singleLine=\"true\"\r\n                        android:text=\"\"\r\n                        android:textSize=\"@dimen/login_editer_textsize\" />\r\n\r\n                    <ImageButton\r\n                        android:id=\"@+id/ib_login_select_address\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_marginRight=\"@dimen/login_editeicon_margin_right\"\r\n                        android:background=\"@null\"\r\n                        android:src=\"@mipmap/login_activity_dropdown_btn\"\r\n                        android:visibility=\"gone\" />\r\n                </LinearLayout>\r\n\r\n                <View\r\n                    android:layout_width=\"fill_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.3\" />\r\n\r\n                <Button\r\n                    android:id=\"@+id/bt_login_login\"\r\n                    android:layout_width=\"fill_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.883\"\r\n                    android:background=\"@drawable/login_activity_login_bt_background\"\r\n                    android:text=\"@string/login_bttext\"\r\n                    android:textColor=\"@color/white\"\r\n                    android:textSize=\"@dimen/login_editer_textsize\" />\r\n\r\n                <View\r\n                    android:layout_width=\"fill_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.461\" />\r\n\r\n\r\n            </LinearLayout>\r\n            <!-- 留白边距 -->\r\n\r\n            <View\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"fill_parent\"\r\n                android:layout_weight=\"1\" />\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/ll_login_ing_container\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"fill_parent\"\r\n            android:orientation=\"horizontal\"\r\n            android:visibility=\"gone\">\r\n            <!-- 留白边距 -->\r\n\r\n            <View\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"fill_parent\"\r\n                android:layout_weight=\"1.87\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"fill_parent\"\r\n                android:layout_weight=\"6.26\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"fill_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"1.1\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <View\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"fill_parent\"\r\n                        android:layout_weight=\"0.24\" />\r\n\r\n                    <RelativeLayout\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"fill_parent\"\r\n                        android:layout_weight=\"0.52\">\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/iv_login_usericon_bg\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:src=\"@mipmap/login_loging_usericon_bg\" />\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/iv_login_usericon_default\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_margin=\"3dp\"\r\n                            android:src=\"@mipmap/login_loging_usericon_default\" />\r\n                    </RelativeLayout>\r\n\r\n                    <View\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_height=\"fill_parent\"\r\n                        android:layout_weight=\"0.24\" />\r\n                </LinearLayout>\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"fill_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_weight=\"0.9\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_login_ing_status\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        android:text=\"@string/login_loginNow\"\r\n                        android:textSize=\"@dimen/common_listItem_textSize\" />\r\n\r\n                    <Button\r\n                        android:id=\"@+id/bt_login_cancel_loging\"\r\n                        android:layout_width=\"fill_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerInParent=\"true\"\r\n                        android:background=\"@drawable/login_activity_login_background\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"@string/main_cancel\"\r\n                        android:textColor=\"#a0a0a0\"\r\n                        android:textSize=\"@dimen/login_editer_textsize\"\r\n                        android:onClick=\"btOnClick\"/>\r\n                </RelativeLayout>\r\n            </LinearLayout>\r\n            <!-- 留白边距 -->\r\n\r\n            <View\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"fill_parent\"\r\n                android:layout_weight=\"1.87\" />\r\n        </LinearLayout>\r\n    </FrameLayout>\r\n\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/ll_login_bottom_bg_layout\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:layout_weight=\"1.5\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/iv_login_bottom_bg\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"fill_parent\"\r\n            android:adjustViewBounds=\"true\"\r\n            android:background=\"@mipmap/login_activity_bottom_bg\" />\r\n    </LinearLayout>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_login_layout.xml	(revision 3225)
+++ app/src/main/res/layout/activity_login_layout.xml	(revision )
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?><!-- 登陆界面配置 -->
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/sv_login_view"
     android:layout_width="fill_parent"
     android:layout_height="fill_parent"
@@ -284,7 +285,7 @@
     </FrameLayout>
 
 
-    <LinearLayout
+    <RelativeLayout
         android:id="@+id/ll_login_bottom_bg_layout"
         android:layout_width="fill_parent"
         android:layout_height="0dp"
@@ -296,6 +297,17 @@
             android:layout_height="fill_parent"
             android:adjustViewBounds="true"
             android:background="@mipmap/login_activity_bottom_bg" />
-    </LinearLayout>
+
+        <TextView
+            android:id="@+id/login_txt_versionText"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignParentBottom="true"
+            android:layout_alignParentRight="true"
+            android:layout_alignParentEnd="true"
+            android:layout_margin="6dp"
+            tools:text="当前版本：v8.123456789"
+            />
+    </RelativeLayout>
 
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/yineng/ynmessager/activity/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.yineng.ynmessager.activity;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Message;\r\nimport android.text.Editable;\r\nimport android.text.TextUtils;\r\nimport android.text.TextWatcher;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.view.ViewGroup;\r\nimport android.view.ViewGroup.LayoutParams;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ListView;\r\nimport android.widget.PopupWindow;\r\nimport android.widget.PopupWindow.OnDismissListener;\r\nimport android.widget.TextView;\r\n\r\nimport com.alibaba.fastjson.JSON;\r\nimport com.yineng.ynmessager.R;\r\nimport com.yineng.ynmessager.app.Const;\r\nimport com.yineng.ynmessager.app.update.UpdateCheckUtil;\r\nimport com.yineng.ynmessager.bean.ClientInitConfig;\r\nimport com.yineng.ynmessager.bean.login.LoginThread;\r\nimport com.yineng.ynmessager.bean.login.LoginUser;\r\nimport com.yineng.ynmessager.db.ContactOrgDao;\r\nimport com.yineng.ynmessager.db.UserAccountDB;\r\nimport com.yineng.ynmessager.db.dao.LoginUserDao;\r\nimport com.yineng.ynmessager.manager.NoticesManager;\r\nimport com.yineng.ynmessager.manager.XmppConnectionManager;\r\nimport com.yineng.ynmessager.receiver.CommonReceiver;\r\nimport com.yineng.ynmessager.service.XmppConnService;\r\nimport com.yineng.ynmessager.sharedpreference.LastLoginUserSP;\r\nimport com.yineng.ynmessager.smack.ReqIQ;\r\nimport com.yineng.ynmessager.smack.ReqIQResult;\r\nimport com.yineng.ynmessager.util.L;\r\nimport com.yineng.ynmessager.util.NetWorkUtil;\r\nimport com.yineng.ynmessager.util.SystemUtil;\r\nimport com.yineng.ynmessager.util.TimeUtil;\r\nimport com.yineng.ynmessager.util.ToastUtil;\r\n\r\nimport org.jivesoftware.smack.PacketListener;\r\nimport org.jivesoftware.smack.filter.PacketTypeFilter;\r\nimport org.jivesoftware.smack.packet.IQ;\r\nimport org.jivesoftware.smack.packet.Packet;\r\nimport org.jivesoftware.smack.packet.Presence;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashSet;\r\nimport java.util.List;\r\nimport java.util.Set;\r\n\r\nimport org.greenrobot.eventbus.EventBus;\r\nimport me.leolin.shortcutbadger.ShortcutBadger;\r\n\r\n/**\r\n * Activity which displays a login screen to the user, offering registration as\r\n * well.\r\n */\r\n/**\r\n * @author YINENG 用户登陆界面\r\n *\r\n */\r\npublic class LoginActivity extends BaseActivity  {\r\n\tprivate String tag = LoginActivity.class.getSimpleName();\r\n\tprivate Context mContext;// 全局上下文\r\n\tprivate ImageButton mSpinnerIB;// 下拉选项\r\n\tprivate String mUserAccount;// 用户帐号\r\n\tprivate String mUserNo;//用户唯一ID\r\n\tprivate String mUserPassword;// 用户密码\r\n\tprivate String mServiceAddress;// 用户地址\r\n\t// UI references.\r\n\tprivate LinearLayout mUserAccountLL;\r\n\tprivate EditText mUserAccountEV;// 用户帐号\r\n\tprivate EditText mPasswordEV;// 用户密码\r\n\tprivate ImageButton mImgb_clearUsername; // 用户名输入框中的清空按钮\r\n\tprivate EditText mServiceAddressEV;// 用户地址\r\n\tprivate Button mLoginBT;// 登陆按钮\r\n\tprivate LinearLayout mServiceAddressLL;// 服务器区域\r\n\tprivate ProgressDialog mProgressDialog;// 进度框\r\n\tprivate LoginUserDao mLoginUserDao;// 用户登陆帐号列表\r\n\tprivate boolean mIsHid;// 服务器地址是否隐藏\r\n\tprivate List<LoginUser> mUserList;\r\n\tprivate XmppConnectionManager mXmppConnectionManager;//\r\n\tprivate LastLoginUserSP mLastUserSP;// 最近一次登陆帐号信息\r\n\tprivate MyAdapter mLoginUserAdapter;\r\n\t/**\r\n\t * 登录用户帐号的下拉列表\r\n\t */\r\n\tprivate PopupWindow mUserAccountPop;\r\n\t/**\r\n\t * 登录用户服务器地址的下拉列表\r\n\t */\r\n\tprivate PopupWindow mUserAddressPop;\r\n\tprivate final int START_MAINACTIVITY = 200;\r\n\tprivate boolean mIsUserNoLoginSuccess = false;\r\n\tprivate Handler mHandler = new Handler() {\r\n\r\n\t\tpublic void handleMessage(Message msg) {\r\n\t\t\tint x = msg.arg1;\r\n\t\t\tswitch (x) {\r\n\t\t\tcase LoginThread.LOGIN_START:// 登陆中，登陆按钮不可用\r\n\t\t\t\tL.i(tag, \"LOGIN_START\");\r\n\t\t\t\tshowProgressD();\r\n\t\t\t\tbreak;\r\n\t\t\tcase LoginThread.LOGIN_FAIL:// 登陆失败\r\n\t\t\t\tL.i(tag, \"LOGIN_FAIL\");\r\n\t\t\t\thidProgessD();\r\n\t\t\t\tToastUtil.toastAlerMessageiconTop(mContext,\r\n\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(), \"登录失败\", 1000);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LoginThread.LOGIN_USER_ACCOUNT_ERROR:// 用户名或密码错误\r\n\t\t\t\tL.i(tag, \"LOGIN_USER_ACCOUNT_ERROR\");\r\n\t\t\t\thidProgessD();\r\n\t\t\t\tToastUtil.toastAlerMessageiconTop(mContext,\r\n\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(), \"用户名或密码错误\", 1000);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LoginThread.LOGIN_SERVER_ERROR:// 服务器或地址错误\r\n\t\t\t\tL.i(tag, \"LOGIN_SERVER_ERROR\");\r\n\t\t\t\thidProgessD();\r\n\t\t\t\tToastUtil.toastAlerMessageiconTop(mContext,\r\n\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(), \"服务器或地址错误\", 1000);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LoginThread.LOGIN_SERVER_NOT_RESPON:// 服务器没响应\r\n\t\t\t\tL.i(tag, \"LOGIN_SERVER_NOT_RESPON\");\r\n\t\t\t\thidProgessD();\r\n\t\t\t\tToastUtil.toastAlerMessageiconTop(mContext,\r\n\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(), \"服务器未响应，请稍后再试\", 1000);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LoginThread.LOGIN_TIMEOUT:// 超时\r\n\t\t\t\thidProgessD();\r\n\t\t\t\tToastUtil.toastAlerMessageiconTop(mContext,\r\n\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(), \"连接服务器超时，请检查\", 1000);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LoginThread.LOGIN_USER_NOT_EXIST:\r\n\t\t\t\thidProgessD();\r\n\t\t\t\tToastUtil.toastAlerMessageiconTop(mContext,\r\n\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(), \"用户不存在\", 1000);\r\n\t\t\t\tbreak;\r\n\t\t\tcase LoginThread.LOGIN_SUCCESS:// 登陆成功\r\n\t\t\t\t// hidProgessD();\r\n\t\t\t\tif (mNowLoginuser == null) {//用登录帐号登录成功\r\n\t\t\t\t\tconnectSendPacket();\r\n\t\t\t\t} else {//说明用真正的userNo登录成功了\r\n\t\t\t\t\tL.i(tag, \"LOGIN_SUCCESS -- init iq\");\r\n//\t\t\t\t\tstartMainUIAndService();\r\n\t\t\t\t\tmIsUserNoLoginSuccess = true;\r\n\t\t\t\t\tmLoginCancelBT.setOnClickListener(null);\r\n\t\t\t\t\tmLoginCancelBT.setVisibility(View.GONE);\r\n\t\t\t\t\tmLogingStatusTV.setText(\"连接成功,正在验证版本信息...\");\r\n                    //发送客户端初始化IQ请求，获取openfire中配置YNedut相关地址，并回调到mUserInfoIQListener接口中\r\n\t\t\t\t\tReqIQ iq = new ReqIQ();\r\n\t\t\t\t\tiq.setNameSpace(Const.REQ_IQ_XMLNS_CLIENT_INIT);\r\n\t\t\t\t\tL.d(\"LoginActivity\", \"LoginThread.LOGIN_SUCCESS iq xml ->\" + iq.toXML());\r\n\t\t\t\t\tmXmppConnectionManager.addPacketListener(mUserInfoIQListener, new PacketTypeFilter(IQ.class));\r\n\t\t\t\t\tmXmppConnectionManager.getConnection().sendPacket(iq);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase LoginThread.LOGIN_CANCEL://取消登录\r\n\t\t\t\t\tL.e(\"退出登录\");\r\n\t\t\t\t\t// 清空密码\r\n\t\t\t\t\tLastLoginUserSP lastUser = LastLoginUserSP.getInstance(mContext);\r\n\t\t\t\t\tlastUser.saveUserPassword(\"\");\r\n\t\t\t\t\t// 下线，停止xmpp服务\r\n\t\t\t\t\tcloseXmppService();\r\n\r\n\t\t\t\t\t//关闭用户数据库连接\r\n\t\t\t\t\tUserAccountDB.setNullInstance();\r\n\t\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n//\t\t\t\thidProgessD();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tswitch (msg.what) {\r\n\t\t\tcase 999:\r\n\t\t\t\tmServiceAddressLL.setVisibility(View.VISIBLE);\r\n\t\t\t\tbreak;\r\n\t\t\tcase START_MAINACTIVITY:\r\n//\t\t\t\thidProgessD();\r\n//\t\t\t\tToastUtil.toastAlerMessageBottom(mContext, \"登录成功！\", 1000);\r\n\t\t\t\tmLogingUserIconBgIV.clearAnimation();\r\n\t\t\t\tIntent mainActivityIntent = new Intent(mContext, MainActivity.class);\r\n\t\t\t\tLoginActivity.this.startActivity(mainActivityIntent);\r\n\t\t\t\tfinishActivity();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n//\t\t\t\tL.e(\"default hidProgessD\");\r\n//\t\t\t\thidProgessD();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tprivate PopupWindow mPopupWindow;\r\n\r\n\t/**\r\n\t * 当前登录用户,null:用户不存在在数据库，!= null: 存在在数据库\r\n\t */\r\n\tprivate LoginUser mNowLoginuser = null;\r\n\tprivate CommonReceiver startMainReceiver;\r\n\t/**\r\n\t * 服务器地址下拉框按钮\r\n\t */\r\n\tprivate ImageButton mAddressBT;\r\n\t/**\r\n\t * 用户登录过的服务器地址\r\n\t */\r\n\tprivate Set<String> mUserLoginedServiceUrls;\r\n\r\n\t/**\r\n\t * 登录过的帐号列表\r\n\t */\r\n\tListView mLoginedUserAccountLV;\r\n\r\n\t/**\r\n\t * 正在登录时的背景圆环\r\n\t */\r\n\tprivate ImageView mLogingUserIconBgIV;\r\n\t/**\r\n\t * 正在登录时的默认头像\r\n\t */\r\n\tprivate ImageView mLogingUserIconIV;\r\n\t/**\r\n\t * 右进\r\n\t */\r\n\tprivate Animation rightInAnimation;\r\n\t/**\r\n\t * 右出\r\n\t */\r\n\tprivate Animation rightOutAnimation;\r\n\t/**\r\n\t * 左进\r\n\t */\r\n\tprivate Animation leftInAnimation;\r\n\r\n\t/**\r\n\t * 左出\r\n\t */\r\n\tprivate Animation leftOutAnimation;\r\n\r\n\t/**\r\n\t * 旋转动画\r\n\t */\r\n\tprivate Animation loadingAnimation;\r\n\t/**\r\n\t * 正在登录的视图\r\n\t */\r\n\tprivate LinearLayout mLogingViewLL;\r\n\r\n\t/**\r\n\t * 登录界面的用户信息容器视图\r\n\t */\r\n\tprivate LinearLayout mLoginUserInfoLL;\r\n\t/**\r\n\t * 登录的runable对象\r\n\t */\r\n\tprivate LoginThread mLoginRunable;\r\n\t/**\r\n\t * 登录成功的状态提示\r\n\t */\r\n\tprivate TextView mLogingStatusTV;\r\n\t/**\r\n\t * 取消登录的按钮\r\n\t */\r\n\tprivate Button mLoginCancelBT;\r\n\r\n\t/**\r\n\t * 服务器地址适配器\r\n\t */\r\n\tprivate MyAdapter mLoginServersAdapter;\r\n\t/**\r\n\t * 初始化配置信息\r\n\t */\r\n\tprivate ClientInitConfig mClientInitConfig;\r\n\t/**\r\n\t * 服务器地址\r\n\t */\r\n\tprivate ListView mLoginedUserAddressLV;\r\n\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity_login_layout);\r\n\t\tinitViews();\r\n\t\tinitUserInfo();\r\n\t\tinitViewListener();\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化views\r\n\t */\r\n\tprivate void initViews() {\r\n\t\tmContext = this;\r\n\t\tmLoginUserInfoLL = (LinearLayout) findViewById(R.id.ll_login_info_container);\r\n\t\tmSpinnerIB = (ImageButton) findViewById(R.id.ib_login_select_account);\r\n\t\tmUserAccountLL = (LinearLayout) findViewById(R.id.ll_login_useraccount);\r\n\t\tmUserAccountEV = (EditText) findViewById(R.id.ev_login_useraccount);\r\n\t\tmPasswordEV = (EditText) findViewById(R.id.ev_login_userpassword);\r\n\t\tmImgb_clearUsername = (ImageButton) findViewById(R.id.login_imgb_clearUsername);\r\n\t\tmServiceAddressEV = (EditText) findViewById(R.id.ev_login_serviceaddress);\r\n\t\tmAddressBT = (ImageButton) findViewById(R.id.ib_login_select_address);\r\n\t\tmServiceAddressLL = (LinearLayout) findViewById(R.id.ll_login_servers);\r\n\t\tmLoginBT = (Button) findViewById(R.id.bt_login_login);\r\n\r\n\t\tmLogingViewLL = (LinearLayout) findViewById(R.id.ll_login_ing_container);\r\n\t\tmLogingUserIconBgIV = (ImageView) findViewById(R.id.iv_login_usericon_bg);\r\n\t\tmLogingUserIconIV = (ImageView) findViewById(R.id.iv_login_usericon_default);\r\n\t\tmLogingStatusTV = (TextView) findViewById(R.id.tv_login_ing_status);\r\n\t\tmLoginCancelBT = (Button) findViewById(R.id.bt_login_cancel_loging);\r\n\r\n\t\tView mPhonePopView = LayoutInflater.from(mContext).inflate(R.layout.contact_personinfo_phone_popview, null);\r\n\t\tTextView mDeleteTitleTV = (TextView) mPhonePopView.findViewById(R.id.tv_personinfo_pop_add_contact);\r\n\t\tTextView mOnlyDelAccountTV = (TextView) mPhonePopView.findViewById(R.id.tv_personinfo_pop_call_contact);\r\n\t\tTextView mDeleteAllTV= (TextView) mPhonePopView.findViewById(R.id.tv_personinfo_pop_sent_sms);\r\n\r\n\t\tmDeleteTitleTV.setText(getString(R.string.login_confirmDeleteAccount));\r\n\t\tmDeleteTitleTV.setTextColor(Color.RED);\r\n\t\tmOnlyDelAccountTV.setText(getString(R.string.login_deleteOnlyAccount));\r\n\t\tmDeleteAllTV.setText(getString(R.string.login_deleteAccountWithData));\r\n\t\tmPopupWindow = new PopupWindow(mPhonePopView, LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT, true);\r\n\t\tmLoginedUserAccountLV = new ListView(mContext);\r\n\r\n\t\tinitAnimation();\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化动画\r\n\t */\r\n\tprivate void initAnimation() {\r\n\t\trightInAnimation = AnimationUtils.loadAnimation(mContext, R.anim.slide_right_in);\r\n\t\trightOutAnimation = AnimationUtils.loadAnimation(mContext, R.anim.slide_right_out);\r\n\t\tleftInAnimation = AnimationUtils.loadAnimation(mContext, R.anim.slide_left_in);\r\n\t\tleftOutAnimation = AnimationUtils.loadAnimation(mContext, R.anim.slide_left_out);\r\n\t\tloadingAnimation = AnimationUtils.loadAnimation(mContext, R.anim.loading_ratate);\r\n\t}\r\n\r\n\t@Override\r\n\tprotected void onStart()\r\n\t{\r\n\t\tsuper.onStart();\r\n\t\t// 清除桌面图标的未读提醒数字\r\n\t\tShortcutBadger.with(getApplicationContext()).remove();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean dispatchTouchEvent(MotionEvent ev)\r\n\t{\r\n\t\tif (ev.getAction() == MotionEvent.ACTION_DOWN) {\r\n\t\t\tView v = getCurrentFocus();\r\n\t\t\tif (v instanceof EditText && SystemUtil.isTouchOutside(v, ev)) {\r\n\t\t\t\tInputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\r\n\t\t\t\tif (imm != null) {\r\n\t\t\t\t\timm.hideSoftInputFromWindow(v.getWindowToken(), 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn super.dispatchTouchEvent(ev);\r\n\t\t}\r\n\t\t// 必不可少，否则所有的组件都不会有TouchEvent了\r\n\t\tif (getWindow().superDispatchTouchEvent(ev)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn onTouchEvent(ev);\r\n\t}\r\n\r\n\t/**\r\n\t * 重置user信息\r\n\t */\r\n\tprotected void resetUserInfo() {\r\n\t\tmNowLoginuser = null;\r\n\t\tmUserNo = \"\";\r\n\t\tmIsUserNoLoginSuccess = false;\r\n\t\tmClientInitConfig = null;\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化用户界面\r\n\t */\r\n\tprivate void initUserInfo() {\r\n\t\tmProgressDialog = new ProgressDialog(mContext);\r\n\t\tmLastUserSP = LastLoginUserSP.getInstance(mContext);\r\n\t\tmLoginUserDao = new LoginUserDao(mContext);\r\n\t\tString account = mLastUserSP.getUserLoginAccount();\r\n\t\tString address = mLastUserSP.getUserServicesAddress();\r\n\t\tmUserAccountEV.setText(account);\r\n\t\tmUserAccountEV.setSelection(account.length());\r\n\t\tmPasswordEV.setText(mLastUserSP.getUserPassword());\r\n\t\t// 如果本地没有服务器地址则显示，否则隐藏\r\n\t\tif (address != null) {\r\n\t\t\tmServiceAddressEV.setText(address);\r\n\t\t}\r\n\r\n\t\t// 如果用户名输入框中有内容，则先直接显示出来清空按钮\r\n\t\tif(TextUtils.isEmpty(account))\r\n\t\t{\r\n\t\t\tmImgb_clearUsername.setVisibility(View.INVISIBLE);\r\n\t\t}else\r\n\t\t{\r\n\t\t\tmImgb_clearUsername.setVisibility(View.VISIBLE);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 为view设置监听器\r\n\t */\r\n\tprivate void initViewListener() {\r\n\t\tmImgb_clearUsername.setOnClickListener(new OnClickListener() {\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View v) {\r\n\t\t\t\tmUserAccountEV.setText(\"\");\r\n\t\t\t\tmPasswordEV.setText(\"\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmUserAccountEV.addTextChangedListener(new TextWatcher() {\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void onTextChanged(CharSequence s, int start, int before, int count) {\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\t\t\t}\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void afterTextChanged(Editable s) {\r\n\t\t\t\tif (s.length() > 0) {\r\n\t\t\t\t\tmImgb_clearUsername.setVisibility(View.VISIBLE);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmImgb_clearUsername.setVisibility(View.INVISIBLE);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tinitUserAccountListView();\r\n\r\n\t\tinitUserServiceUrls();\r\n\r\n\t\t// 单击登陆按钮触发事件\r\n\t\tmLoginBT.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View view) {\r\n\t\t\t\t// 帐号转成小写\r\n//\t\t\t\tmUserAccount = mUserAccountEV.getText().toString().trim().toLowerCase();\r\n\t\t\t\tmUserAccount = mUserAccountEV.getText().toString().trim();\r\n\t\t\t\tmUserPassword = mPasswordEV.getText().toString().trim();\r\n\t\t\t\tmServiceAddress = mServiceAddressEV.getText().toString().trim();\r\n\t\t\t\t// 验证用户输入及提示用输入内容\r\n\t\t\t\tif (TextUtils.isEmpty(mUserAccount)) {\r\n\t\t\t\t\tmUserAccountEV.requestFocus();\r\n\t\t\t\t\tToastUtil.toastAlerMessageiconTop(mContext,\r\n\t\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(),\r\n\t\t\t\t\t\t\tgetString(R.string.login_errortext_emptyusername),\r\n\t\t\t\t\t\t\t2000);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (TextUtils.isEmpty(mUserPassword)) {\r\n\t\t\t\t\tmPasswordEV.requestFocus();\r\n\t\t\t\t\tToastUtil.toastAlerMessageiconTop(mContext,\r\n\t\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(),\r\n\t\t\t\t\t\t\tgetString(R.string.login_errortext_emptypassowrd),\r\n\t\t\t\t\t\t\t2000);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (TextUtils.isEmpty(mServiceAddress)) {\r\n\t\t\t\t\tmServiceAddressEV.requestFocus();\r\n\t\t\t\t\tToastUtil\r\n\t\t\t\t\t\t\t.toastAlerMessageiconTop(\r\n\t\t\t\t\t\t\t\t\tmContext,\r\n\t\t\t\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(),\r\n\t\t\t\t\t\t\t\t\tgetString(R.string.login_errortext_emptyserviceaddress),\r\n\t\t\t\t\t\t\t\t\t2000);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!checkServerAddressIsURL(mServiceAddress)) {// 如果用户输入格式不正确\r\n\t\t\t\t\t\tmServiceAddressEV.requestFocus();\r\n\t\t\t\t\t\tToastUtil\r\n\t\t\t\t\t\t\t\t.toastAlerMessageiconTop(\r\n\t\t\t\t\t\t\t\t\t\tmContext,\r\n\t\t\t\t\t\t\t\t\t\tLoginActivity.this.getLayoutInflater(),\r\n\t\t\t\t\t\t\t\t\t\tgetString(R.string.login_errorformat_serviceaddress),\r\n\t\t\t\t\t\t\t\t\t\t2000);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 如果网络不可用，建议用户开启网络连接\r\n\t\t\t\tif (!NetWorkUtil.isNetworkAvailable(mContext)) {\r\n\r\n\t\t\t\t\tif (mLastUserSP.isExistsUser())// 如果存在本地账户，进入主页\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tIntent mainActivityIntent = new Intent(mContext,\r\n\t\t\t\t\t\t\t\tMainActivity.class);\r\n\t\t\t\t\t\tLoginActivity.this.startActivity(mainActivityIntent);\r\n\r\n\t\t\t\t\t} else {// 无网络无登录记录\r\n\t\t\t\t\t\tToastUtil.toastAlerMessageCenter(mContext, getString(R.string.login_networkDisconnected),\r\n\t\t\t\t\t\t\t\t1000);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {// 如果网络可用，开启登陆线程\r\n\t\t\t\t\tmXmppConnectionManager = XmppConnectionManager\r\n\t\t\t\t\t\t\t.getInstance();\r\n\t\t\t\t\t//如果密码不同，则恢复状态，重新初始化\r\n\t\t\t\t\tif (!mUserPassword.equals(mLastUserSP.getUserPassword())\r\n\t\t\t\t\t\t\t|| !mUserAccount.equals(mLastUserSP.getUserLoginAccount())) {\r\n\t\t\t\t\t\tXmppConnectionManager.getInstance().setXmppConnectionConfigNull();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmXmppConnectionManager.init(\r\n\t\t\t\t\t\t\tLoginThread.getHostFromAddress(mServiceAddress),\r\n\t\t\t\t\t\t\tLoginThread.getPortFromAddress(mServiceAddress),\r\n\t\t\t\t\t\t\tConst.SERVICENAME);\r\n\t\t\t\t\tString tempLoginUserNo;\r\n\t\t\t\t\tresetUserInfo();\r\n\t\t\t\t\t//修复多个loginname的问题\r\n\t\t\t\t\ttempLoginUserNo = mUserAccount;\r\n\t\t\t\t\tmLoginRunable = mXmppConnectionManager.doLoginThread(tempLoginUserNo,\r\n\t\t\t\t\t\t\tmUserPassword, Const.RESOURSE_NAME, mHandler);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n//\t\tregisterGoMainActivityReceiver();\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化用户登录过的帐号视图\r\n\t */\r\n\tprivate void initUserAccountListView() {\r\n\t\t// 如果有两个以上帐号，则显示帐号选择框\r\n\t\tmUserList = mLoginUserDao.getLoginUsers();\r\n\t\tif (mUserList != null && mUserList.size() > 0) {\r\n\t\t\tmSpinnerIB.setVisibility(View.VISIBLE);\r\n\t\t\tList<String> accounts = new ArrayList<String>();\r\n\t\t\tfor (LoginUser user : mUserList) {\r\n\t\t\t\taccounts.add(user.getAccount());\r\n\t\t\t}\r\n\t\t\tmSpinnerIB.setOnClickListener(new OnClickListener() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void onClick(View v) {\r\n\t\t\t\t\tmSpinnerIB.setImageResource(R.mipmap.login_activity_dropup_btn);\r\n\t\t\t\t\tmLoginedUserAccountLV.setVerticalScrollBarEnabled(false);\r\n\r\n\t\t\t\t\tif (mLoginUserAdapter == null) {\r\n\t\t\t\t\t\tmLoginUserAdapter = new MyAdapter();\r\n\t\t\t\t\t\tmLoginUserAdapter.setLoginUserData(mUserList);\r\n\t\t\t\t\t\tmLoginedUserAccountLV.setAdapter(mLoginUserAdapter);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmLoginUserAdapter.setLoginUserData(mUserList);\r\n\t\t\t\t\t\tmLoginUserAdapter.notifyDataSetChanged();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tint margin = getResources().getDimensionPixelSize(R.dimen.login_usericon_padding);\r\n\t\t\t\t\tif (mUserAccountPop == null) {\r\n\t\t\t\t\t\tint popWidht = mUserAccountLL.getWidth() - 2*margin;\r\n\t\t\t\t\t\tmUserAccountPop = new PopupWindow(mLoginedUserAccountLV, popWidht,\r\n\t\t\t\t\t\t\t\tLayoutParams.WRAP_CONTENT, true);\r\n\t\t\t\t\t\tmUserAccountPop.setBackgroundDrawable(new ColorDrawable(Color.parseColor(\"#f5f5f5\")));\r\n\t\t\t\t\t\tmUserAccountPop.setOnDismissListener(new OnDismissListener() {\r\n\r\n\t\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\t\tpublic void onDismiss() {\r\n\t\t\t\t\t\t\t\tmSpinnerIB.setImageResource(R.mipmap.login_activity_dropdown_btn);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmUserAccountPop.showAsDropDown(mUserAccountLL,margin,0);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\t// mSpinner.setVisibility(View.GONE);\r\n\t\t\tmSpinnerIB.setVisibility(View.GONE);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化用户登录过的服务器地址\r\n\t */\r\n\tprivate void initUserServiceUrls() {\r\n\t\tmUserLoginedServiceUrls = LastLoginUserSP.getUserServerUrls(mContext);\r\n\t\tif (mUserLoginedServiceUrls == null) {\r\n\t\t\tmUserLoginedServiceUrls = new HashSet<String>();\r\n\t\t}\r\n\t\t// 有两条以上历史记录才显示选择框\r\n\t\tif (mUserLoginedServiceUrls.size() > 0) {\r\n\t\t\tmLoginedUserAddressLV = new ListView(mContext);\r\n\t\t\tmAddressBT.setVisibility(View.VISIBLE);\r\n\t\t\tmAddressBT.setOnClickListener(new OnClickListener() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void onClick(View v) {\r\n\r\n\t\t\t\t\tmUserLoginedServiceUrls = LastLoginUserSP.getUserServerUrls(mContext);\r\n\t\t\t\t\tif (mUserLoginedServiceUrls == null) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tList<String> address = new ArrayList<String>(mUserLoginedServiceUrls);\r\n\r\n\t\t\t\t\tmAddressBT.setImageResource(R.mipmap.login_activity_dropup_btn);\r\n\t\t\t\t\tif (mLoginedUserAddressLV.getAdapter() == null) {\r\n\t\t\t\t\t\tmLoginServersAdapter = new MyAdapter();\r\n\t\t\t\t\t\tmLoginServersAdapter.setServersData(address);\r\n\t\t\t\t\t\tmLoginedUserAddressLV.setAdapter(mLoginServersAdapter);\r\n\r\n//\t\t\t\t\t\tArrayAdapter<String> urlsAdapter = new ArrayAdapter<String>(mContext,\r\n//\t\t\t\t\t\t\t\tandroid.R.layout.simple_spinner_dropdown_item, address);\r\n//\t\t\t\t\t\tmLoginedUserAddressLV.setAdapter(urlsAdapter);\r\n//\t\t\t\t\t\tmLoginedUserAddressLV.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n//\t\t\t\t\t\t\t@Override\r\n//\t\t\t\t\t\t\tpublic void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n//\t\t\t\t\t\t\t\tmServiceAddressEV.setText(address.get(position));\r\n//\t\t\t\t\t\t\t\tmUserAddressPop.dismiss();\r\n//\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmLoginServersAdapter.setServersData(address);\r\n\t\t\t\t\t\tmLoginServersAdapter.notifyDataSetChanged();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tint margin = getResources().getDimensionPixelSize(R.dimen.login_usericon_padding);\r\n\t\t\t\t\tif (mUserAddressPop == null) {\r\n\t\t\t\t\t\tint popWidht = mServiceAddressLL.getWidth() - 2*margin;\r\n\t\t\t\t\t\tmUserAddressPop = new PopupWindow(mLoginedUserAddressLV, popWidht,\r\n\t\t\t\t\t\t\t\tLayoutParams.WRAP_CONTENT, true);\r\n\t\t\t\t\t\tmUserAddressPop.setBackgroundDrawable(new ColorDrawable(Color.parseColor(\"#f5f5f5\")));\r\n\t\t\t\t\t\tmUserAddressPop.setOnDismissListener(new OnDismissListener() {\r\n\r\n\t\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\t\tpublic void onDismiss() {\r\n\t\t\t\t\t\t\t\tmAddressBT.setImageResource(R.mipmap.login_activity_dropdown_btn);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmUserAddressPop.showAsDropDown(mServiceAddressLL,margin,0);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tmAddressBT.setVisibility(View.GONE);\r\n\t\t}\r\n\t}\r\n\r\n//\t/**\r\n//\t * 注册进入主界面的广播\r\n//\t */\r\n//\tpublic void registerGoMainActivityReceiver() {\r\n//\t\t// 动态注册广播接收器\r\n//\t\tstartMainReceiver = new CommonReceiver();\r\n//\t\tIntentFilter intentFilter = new IntentFilter();\r\n//\t\tintentFilter.addAction(Const.BROADCAST_ACTION_START_MAINACTIVITY);\r\n//\t\tregisterReceiver(startMainReceiver, intentFilter);\r\n//\t\tstartMainReceiver.setStartMainActivityListener(new onStartMainListener() {\r\n//\r\n//\t\t\t@Override\r\n//\t\t\tpublic void onStartMainActivity() {\r\n//\t\t\t\tmHandler.sendEmptyMessage(START_MAINACTIVITY);\r\n//\r\n//\r\n//\t\t\t}\r\n//\t\t});\r\n//\t}\r\n\r\n\t/**\r\n\t * 保存用户登陆信息\r\n\t */\r\n\tprivate void saveLastUser() {\r\n\t\t// save to sharedpreference\r\n\t\tL.d(\"saveLastUser : mUserNo == \" + mUserNo);\r\n\t\tmLastUserSP.saveUserAccount(mUserNo);\r\n\t\tmLastUserSP.saveUserLoginAccount(mUserAccount);\r\n\t\tmLastUserSP.saveUserPassword(mUserPassword);\r\n\t\tmLastUserSP.saveUserServicesAddress(mServiceAddress);\r\n\t\tmLastUserSP.setIsFirstLogin(mUserAccount, false);// 是否首次登陆为false\r\n\t\tif (mUserLoginedServiceUrls == null) {\r\n\t\t\tmUserLoginedServiceUrls = new HashSet<String>();\r\n\t\t}\r\n\t\tif (!TextUtils.isEmpty(mServiceAddress)) {\r\n\t\t\tmUserLoginedServiceUrls.add(mServiceAddress);\r\n\t\t\tLastLoginUserSP.setUserServerUrls(mContext, mUserLoginedServiceUrls);\r\n\t\t}\r\n\t\tmNowLoginuser.setPassWord(mUserPassword);\r\n\t\tmNowLoginuser.setLastLoginDate(TimeUtil\r\n\t\t\t\t.getCurrenDateTime(TimeUtil.FORMAT_DATETIME_24));\r\n\t\tmLoginUserDao.saveLoginUser(mNowLoginuser);\r\n\t\tmApplication.mLoginUser = mNowLoginuser;\r\n\t}\r\n\r\n\t/**\r\n\t * 开启主界面和服务\r\n\t */\r\n\tprivate void startMainUIAndService() {\r\n//\t\tmLoginCancelBT.setOnClickListener(null);\r\n//\t\tmLoginCancelBT.setVisibility(View.GONE);\r\n//\t\tmLogingStatusTV.setText(\"登录成功,正在加载数据...\");\r\n\t\tsaveLastUser();// 保存登陆信息\r\n\t\tsaveClientInitInfo();//保存客户端初始化信息到数据库\r\n\t\tNoticesManager.getInstance(getApplicationContext()).destoryInstance();\r\n\r\n\t\tIntent serviceIntent = new Intent(mContext, XmppConnService.class);\r\n\t\tserviceIntent.putExtra(\"isLoginActvity\", true);\r\n\t\tLoginActivity.this.startService(serviceIntent);\r\n\r\n\t\tif (!mHandler.hasMessages(START_MAINACTIVITY)) {\r\n\t\t\tmHandler.sendEmptyMessageDelayed(START_MAINACTIVITY, 1000);\r\n//\t\t\tmHandler.sendEmptyMessage(START_MAINACTIVITY);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 保存openfire addressOf的初始化信息\r\n\t */\r\n\tpublic void saveClientInitInfo() {\r\n\t\tif (mClientInitConfig != null) {\r\n\t\t\tContactOrgDao initDao = new ContactOrgDao(LoginActivity.this);\r\n\t\t\tinitDao.saveClientInitInfo(mClientInitConfig);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 显示正在登录的界面\r\n\t */\r\n\tprivate void showProgressD() {\r\n//\t\tif (mProgressDialog != null && !mProgressDialog.isShowing()) {\r\n//\t\t\tmProgressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER)\r\n//\t\t\tmProgressDialog.setMessage(getString(R.string.login_loginNow));\r\n//\t\t\tmProgressDialog.setIndeterminate(true);\r\n//\t\t\tmProgressDialog.setCancelable(false);\r\n//\t\t\tmProgressDialog.show();\r\n//\t\t\tmProgressDialog.setCanceledOnTouchOutside(false);\r\n//\t\t}\r\n\t\tif (mLogingViewLL.isShown()) return;\r\n\t\tmLoginUserInfoLL.startAnimation(leftOutAnimation);\r\n\t\tmLoginUserInfoLL.setVisibility(View.GONE);\r\n\t\tmLogingViewLL.setVisibility(View.VISIBLE);\r\n\t\tmLogingStatusTV.setText(getString(R.string.login_loginNow));\r\n\t\tmLoginCancelBT.setVisibility(View.VISIBLE);\r\n\t\tmLogingViewLL.startAnimation(rightInAnimation);\r\n\t\tmLogingUserIconBgIV.startAnimation(loadingAnimation);\r\n\t}\r\n\r\n\t/**\r\n\t * 隐藏正在登录的界面\r\n\t */\r\n\tpublic void hidProgessD() {\r\n//\t\tif (mProgressDialog != null && mProgressDialog.isShowing()) {\r\n//\t\t\tmProgressDialog.cancel();\r\n//\t\t}\r\n\t\tif (mLoginUserInfoLL.isShown()) return;\r\n\t\tmLogingUserIconBgIV.clearAnimation();\r\n\t\tmLogingViewLL.startAnimation(rightOutAnimation);\r\n\t\tmLogingViewLL.setVisibility(View.GONE);\r\n\t\tmLoginUserInfoLL.startAnimation(leftInAnimation);\r\n\t\tmLoginUserInfoLL.setVisibility(View.VISIBLE);\r\n\t}\r\n\r\n\t/**\r\n\t * 关闭界面\r\n\t */\r\n\tprivate void finishActivity() {\r\n\t\tthis.finish();\r\n\t}\r\n\r\n\t/**\r\n\t * 检测服务器地址是否合法\r\n\t * @param adress\r\n\t * @return\r\n\t */\r\n\tprivate boolean checkServerAddressIsURL(String adress) {\r\n\t\t//\r\n\t\tString urlstr = \"\";\r\n\t\tString regex = \"(([0-9]{1,3}\\\\.){3}[0-9]{1,3}\" // IP\r\n\t\t\t\t+ \"|\"\r\n\t\t\t\t+ \"([0-9a-z_!~*'()-]+\\\\.)*\"\r\n\t\t\t\t+ \"([0-9a-z][0-9a-z-]{0,61})?[0-9a-z]\\\\.\" + \"[a-z]{2,6})\" // domain\r\n\r\n\t\t\t\t+ \"(:[0-9]{1,5})?\";\r\n\r\n\t\tif (adress.contains(\":\")) {\r\n\r\n\t\t\turlstr = adress.toLowerCase();\r\n\r\n\t\t} else {\r\n\r\n\t\t\turlstr = adress.toLowerCase() + \":\" + Const.SERVER_PORT;\r\n\t\t}\r\n\t\treturn urlstr.matches(regex);\r\n\t}\r\n\r\n\tpublic void onClickListener(View v) {\r\n\t\tswitch (v.getId()) {\r\n\t\tcase R.id.tv_personinfo_pop_call_contact://仅删除帐号\r\n\t\t\tdeleteSpAndDao(false);\r\n\t\t\tbreak;\r\n\t\tcase R.id.tv_personinfo_pop_sent_sms://删除帐号和本地记录\r\n\t\t\tdeleteSpAndDao(true);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tmPopupWindow.dismiss();\r\n\t}\r\n\r\n\t@Override\r\n\tprotected void onDestroy() {\r\n\t\tsuper.onDestroy();\r\n\t\tif(mUserAccountPop != null) mUserAccountPop.dismiss();\r\n\t\tmHandler.removeCallbacksAndMessages(null);\r\n\t\tif (mXmppConnectionManager != null) {\r\n\t\t\tmXmppConnectionManager.removePacketListener(mUserInfoIQListener);\r\n\t\t}\r\n\t\tif(startMainReceiver != null)\r\n\t\t{\r\n\t\t\tunregisterReceiverSafe(startMainReceiver);\r\n\t\t}\r\n\t}\r\n\r\n\tclass MyAdapter extends BaseAdapter {\r\n\r\n\t\tprivate List<Object> mData = new ArrayList<>();\r\n\r\n\t\tpublic void setLoginUserData(List<LoginUser> tempData) {\r\n\t\t\tmData.clear();\r\n\t\t\tmData.addAll(tempData);\r\n\t\t}\r\n\r\n\t\tpublic void setServersData(List<String> tempData) {\r\n\t\t\tmData.clear();\r\n\t\t\tmData.addAll(tempData);\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic int getCount() {\r\n\t\t\treturn mData!=null?mData.size():0;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic Object getItem(int position) {\r\n\t\t\treturn mData!=null?mData.get(position):null;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic long getItemId(int position) {\r\n\t\t\treturn position;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic View getView(final int position, View convertView,\r\n\t\t\t\tViewGroup parent) {\r\n\t\t\tLayoutInflater inflater = LayoutInflater\r\n\t\t\t\t\t.from(getApplicationContext());\r\n\t\t\tView view = inflater.inflate(\r\n\t\t\t\t\tR.layout.item_login_deluser_popwindow_list, parent, false);\r\n\t\t\tLinearLayout ll_icon = (LinearLayout) view.findViewById(R.id.ll_login_users_icon);\r\n\t\t\tTextView tv_name = (TextView) view.findViewById(R.id.tv_login_users_name);\r\n\t\t\tImageButton delete = (ImageButton) view.findViewById(R.id.ib_login_users_delete);\r\n\r\n\t\t\tif (mData.get(position) instanceof LoginUser) {\r\n\t\t\t\ttv_name.setText(((LoginUser)mData.get(position)).getAccount());\r\n\t\t\t\ttv_name.setGravity(Gravity.CENTER);\r\n\t\t\t\tll_icon.setVisibility(View.VISIBLE);\r\n\t\t\t} else if (mData.get(position) instanceof String) {\r\n\t\t\t\ttv_name.setText((String) mData.get(position));\r\n\t\t\t\ttv_name.setGravity(Gravity.LEFT|Gravity.CENTER_VERTICAL);\r\n\t\t\t\tll_icon.setVisibility(View.GONE);\r\n\t\t\t}\r\n\r\n\t\t\ttv_name.setTag(mData.get(position));\r\n\t\t\tdelete.setTag(mData.get(position));\r\n\t\t\ttv_name.setOnClickListener(new OnClickListener() {\r\n\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void onClick(View v) {\r\n\t\t\t\t\tObject clickObj = v.getTag();\r\n\t\t\t\t\tif (clickObj instanceof LoginUser) {\r\n\t\t\t\t\t\tmUserAccountEV.setText(((LoginUser) clickObj).getAccount());\r\n\t\t\t\t\t\tmPasswordEV.setText(((LoginUser) clickObj).getPassWord());\r\n\t\t\t\t\t\tmUserAccountPop.dismiss();\r\n\t\t\t\t\t} else if (clickObj instanceof String) {\r\n\t\t\t\t\t\tmServiceAddressEV.setText((String) clickObj);\r\n\t\t\t\t\t\tmUserAddressPop.dismiss();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//删除事件\r\n\t\t\tdelete.setOnClickListener(new OnClickListener() {\r\n\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void onClick(View v) {\r\n\r\n\t\t\t\t\tObject clickObj = v.getTag();\r\n\t\t\t\t\t//删除帐号\r\n\t\t\t\t\tif (clickObj instanceof LoginUser) {\r\n\t\t\t\t\t\tmDeleteLoginUser = (LoginUser) clickObj;\r\n\t\t\t\t\t\tshowPhonePopWindow();\r\n\t\t\t\t\t\tmUserAccountPop.dismiss();\r\n\t\t\t\t\t} else if (clickObj instanceof String) {//删除服务器地址\r\n\t\t\t\t\t\tString deleteServer = (String) clickObj;\r\n\t\t\t\t\t\tif (mUserLoginedServiceUrls == null) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmData.remove(deleteServer);\r\n\t\t\t\t\t\tmUserLoginedServiceUrls.remove(deleteServer);\r\n\t\t\t\t\t\tLastLoginUserSP.setUserServerUrls(mContext, mUserLoginedServiceUrls);\r\n\t\t\t\t\t\tif (mData.size() == 0) {\r\n\t\t\t\t\t\t\tmServiceAddressEV.setText(\"\");\r\n\t\t\t\t\t\t\tmLastUserSP.saveUserServicesAddress(\"\");\r\n\t\t\t\t\t\t\tmUserAddressPop.dismiss();\r\n\t\t\t\t\t\t\tmAddressBT.setVisibility(View.GONE);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//如果删除的地址和编辑框里的地址相同，则更改编辑框内容\r\n\t\t\t\t\t\t\tif (mServiceAddressEV.getEditableText().toString().equals(deleteServer)) {\r\n\t\t\t\t\t\t\t\tmServiceAddressEV.setText((String)mData.get(0));\r\n\t\t\t\t\t\t\t\tmLastUserSP.saveUserServicesAddress((String) mData.get(0));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnotifyDataSetChanged();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (clickObj == null) {\r\n\t\t\t\t\t\t\tmData.remove(clickObj);\r\n\t\t\t\t\t\t\tmUserLoginedServiceUrls.remove(clickObj);\r\n\t\t\t\t\t\t\tLastLoginUserSP.setUserServerUrls(mContext, mUserLoginedServiceUrls);\r\n\t\t\t\t\t\t\tnotifyDataSetChanged();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n//\t\t\t\t\tint index = (Integer) v.getTag();\r\n//\r\n//\t\t\t\t\tmDeleteUserIndex = index;\r\n//\t\t\t\t\tmUserAccountPop.dismiss();\r\n//\t\t\t\t\tshowPhonePopWindow();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn view;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void showPhonePopWindow(){\r\n\t\tmPopupWindow.setBackgroundDrawable(new ColorDrawable(Color.parseColor(\"#b0000000\")));\r\n\t\tmPopupWindow.showAtLocation(findViewById(R.id.sv_login_view), Gravity.BOTTOM, 0, 0);\r\n\t\tmPopupWindow.setAnimationStyle(R.style.AnimBottom);\r\n\t\tmPopupWindow.setOutsideTouchable(true);\r\n\t\tmPopupWindow.setFocusable(true);\r\n\t\tmPopupWindow.update();\r\n\t}\r\n\r\n\t/**\r\n\t * 下拉框删除项\r\n\t */\r\n\tprivate LoginUser mDeleteLoginUser;\r\n\r\n\t/**\r\n\t * 删除数据\r\n\t * @param deleteAll 是否全部删除\r\n\t */\r\n\tprivate void deleteSpAndDao(boolean deleteAll) {\r\n\t\t//清除webview缓存\r\n\t\tclearWebCacheData();\r\n\t\tif (mUserList != null && mDeleteLoginUser != null && mUserList.contains(mDeleteLoginUser)) {\r\n//\t\t\tLoginUser mDeleteUser = mUserList.get(mDeleteUserIndex);\r\n\r\n\t\t\t//删除loginuser表中的该条记录\r\n\t\t\tmLoginUserDao.deleteByAccount(mDeleteLoginUser.getAccount());\r\n\r\n\t\t\t//删除手机中该帐号的文件\r\n\t\t\tif (deleteAll) {\r\n\t\t\t\tString dbPath = (UserAccountDB.getInstance(this, mDeleteLoginUser.getUserNo()))\r\n\t\t\t\t\t\t.getWritableDatabase().getPath();\r\n\t\t\t\tUserAccountDB.setNullInstance();// 释放数据库文件句柄\r\n\r\n\t\t\t\tif (dbPath != null) {// 删除数据库文件\r\n\t\t\t\t\tnew File(dbPath).delete();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tLastLoginUserSP sp = LastLoginUserSP.getInstance(this);\r\n\t\t\tif (sp.getUserAccount().equals(mDeleteLoginUser.getUserNo())) {// 如果删除的是当前帐号，清空当前帐号\r\n\t\t\t\tsp.saveUserLoginAccount(\"\");\r\n\t\t\t\tsp.saveUserAccount(\"\");\r\n\t\t\t\tsp.saveUserPassword(\"\");\r\n\t\t\t}\r\n\r\n\t\t\tmUserList.remove(mDeleteLoginUser);\r\n\t\t\tmLoginUserAdapter.notifyDataSetChanged();\r\n\t\t\tif (mUserList.size() == 0) {\r\n\t\t\t\tmSpinnerIB.setVisibility(View.GONE);\r\n\t\t\t\tmUserAccountEV.setText(\"\");\r\n\t\t\t\tmPasswordEV.setText(\"\");\r\n\t\t\t} else {\r\n\t\t\t\tLoginUser tempLoginUser = mUserList.get(0);\r\n\t\t\t\tmUserAccountEV.setText(tempLoginUser.getAccount());\r\n\t\t\t\tmPasswordEV.setText(tempLoginUser.getPassWord());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 发送IQ请求获取该联系人详细信息\r\n\t *\r\n\t */\r\n\tprivate void connectSendPacket()\r\n\t{\r\n\t\tmXmppConnectionManager.addPacketListener(mUserInfoIQListener, new PacketTypeFilter(IQ.class));\r\n\t\tReqIQ iq = new ReqIQ();\r\n\t\tiq.setNameSpace(Const.REQ_IQ_XMLNS_GET_PERSON_DETAIL);\r\n\t\tiq.setParamsJson(\"{\\\"userNoList\\\":[\\\"\" + mUserAccount + \"\\\"],\\\"isUserNo\\\":false}\");\r\n\t\tL.d(\"LoginActivity\",\"iq xml ->\" + iq.toXML());\r\n\t\tsendPersonInfoIqPacket(iq);\r\n\t}\r\n\r\n\t/**\r\n\t * 发送packet\r\n\t *\r\n\t * @param packet\r\n\t * @throws IOException\r\n\t */\r\n\tprotected boolean sendPersonInfoIqPacket(Packet packet){\r\n\t\tboolean sendSuccess = false;\r\n\t\tif (mXmppConnectionManager.getConnection() != null) {\r\n\t\t\tif (NetWorkUtil.isNetworkAvailable(mContext)) {\r\n\t\t\t\tif (mXmppConnectionManager.getConnection().isConnected()) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tmXmppConnectionManager.getConnection().sendPacket(packet);\r\n\t\t\t\t\t\tsendSuccess = true;\r\n\t\t\t\t\t} catch (Exception e) {\r\n//\t\t\t\t\t\tif (e.getMessage().equals(\"Not connected to server.\")) {}\r\n\t\t\t\t\t\tsendHandlerMessage(LoginThread.LOGIN_TIMEOUT, 500);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsendHandlerMessage(LoginThread.LOGIN_TIMEOUT, 500);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsendHandlerMessage(LoginThread.LOGIN_TIMEOUT, 500);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sendSuccess;\r\n\t}\r\n\r\n\t/**\r\n\t * 发送到Handler消息队列\r\n\t *\r\n\t * @param arg\r\n\t * @param delaymillis\r\n\t */\r\n\tprivate void sendHandlerMessage(int arg, long delaymillis) {\r\n\t\tMessage msg = mHandler.obtainMessage();\r\n\t\tmsg.arg1 = arg;\r\n\t\tmHandler.sendMessageDelayed(msg, delaymillis);\r\n\t}\r\n\r\n\tprivate PacketListener mUserInfoIQListener = new PacketListener() {\r\n\r\n\t\t@Override\r\n\t\tpublic void processPacket(Packet paramPacket) {\r\n\t\t\treadResultPacket((ReqIQResult) paramPacket);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * 解析用户信息\r\n\t * @param packet\r\n\t */\r\n\tprotected void readResultPacket(ReqIQResult packet) {\r\n\t\tString nameSpace = packet.getNameSpace();\r\n\t\tswitch (nameSpace) {\r\n\t\t\tcase Const.REQ_IQ_XMLNS_CLIENT_INIT:\r\n\t\t\t\tL.e(\"REQ_IQ_XMLNS_CLIENT_INIT: \"+packet.toXML());\r\n\t\t\t\tmClientInitConfig = JSON.parseObject(\r\n\t\t\t\t\t\tpacket.getResp(), ClientInitConfig.class);\r\n\t\t\t\tconfigConstantUrl(mClientInitConfig);\r\n\t\t\t\t//EventBus通知BaseActivity执行检测升级的方法\r\n\t\t\t\tEventBus.getDefault().post(UpdateCheckUtil.getInstance());\r\n\t\t\tbreak;\r\n\t\t\tcase Const.REQ_IQ_XMLNS_GET_PERSON_DETAIL:\r\n\t\t\t\tL.d(\"LoginActivity\",\"iq xml ->\" + packet.toXML());\r\n\t\t\t\tswitch (packet.getCode()) {\r\n\t\t\t\t\tcase Const.IQ_RESPONSE_CODE_SUCCESS:\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tJSONArray tempJsonArray = new JSONArray(packet.getResp());\r\n\t\t\t\t\t\t\tif(tempJsonArray != null && tempJsonArray.length() > 0)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tfor(int i = 0; i < tempJsonArray.length(); i++)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tJSONObject mUserObject = tempJsonArray.optJSONObject(i);\r\n\t\t\t\t\t\t\t\t\tmUserNo = mUserObject.optString(\"userNo\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (mNowLoginuser == null) {\r\n\t\t\t\t\t\t\t\t\tmNowLoginuser = new LoginUser(mUserAccount);\r\n\t\t\t\t\t\t\t\t\tmNowLoginuser.setUserNo(mUserNo);\r\n\t\t\t\t\t\t\t\t\tmNowLoginuser.setFirstLoginDate(TimeUtil\r\n\t\t\t\t\t\t\t\t\t\t\t.getCurrenDateTime(TimeUtil.FORMAT_DATETIME_24));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//如果登录名和用户id一致\r\n\t\t\t\t\t\t\t\tif (mUserAccount.equals(mUserNo)) {\r\n\t\t\t\t\t\t\t\t\tsendHandlerMessage(LoginThread.LOGIN_SUCCESS, 0);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//退出登录名的登录\r\n\t\t\t\t\t\t\t\t\tPresence presence = new Presence(Presence.Type.unavailable);\r\n\t\t\t\t\t\t\t\t\tpresence.setStatus(\"offline\");\r\n\t\t\t\t\t\t\t\t\tmXmppConnectionManager.getConnection().disconnect(presence);\r\n\t\t\t\t\t\t\t\t\t//如果用户在登录帐号登录成功，在获取该帐号详细信息过程中，用户取消登录，就不执行userno登录的操作\r\n\t\t\t\t\t\t\t\t\tif (mLoginRunable != null && mLoginRunable.getCancelLogin()) {\r\n\t\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t//改用mUserNo登录，给mLoginRunable赋新的变量地址\r\n\t\t\t\t\t\t\t\t\tmLoginRunable = mXmppConnectionManager.doLoginThread(mUserNo, mUserPassword, Const.RESOURSE_NAME, mHandler);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}catch(JSONException e)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Const.USER_NOT_EXISTS:\r\n\t\t\t\t\t\tsendHandlerMessage(LoginThread.LOGIN_USER_NOT_EXIST, 200);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void btOnClick(View v) {\r\n\t\tswitch (v.getId()) {\r\n\t\t\tcase R.id.bt_login_cancel_loging:\r\n\t\t\t\tcancelLogin();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 取消登录\r\n\t */\r\n\tpublic void cancelLogin() {\r\n\t\tL.e(\"cancel click\");\r\n\t\tif (mLoginRunable != null) {\r\n\t\t\tmLoginRunable.setCancelLogin(true);\r\n\t\t\thidProgessD();\r\n\t\t\tmHandler.removeMessages(START_MAINACTIVITY);\r\n\t\t}\r\n\t\tif (mIsUserNoLoginSuccess) {\r\n\t\t\tdisconOpenfire(true);\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onBackPressed() {\r\n\t\tif (mLogingViewLL.isShown()) {\r\n\t\t\tcancelLogin();\r\n\t\t} else {\r\n\t\t\tfinish();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void onEventMainThread(LoginUser login) {\r\n\t\tif (login == null || login.getAccount() == null) return;\r\n\t\tswitch (login.getAccount()) {\r\n\t\t\tcase \"0\"://隐藏进度圈并回到登录界面\r\n\t\t\t\thidProgessD();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"1\"://进入主界面\r\n\t\t\t\tL.i(tag, \"LOGIN_SUCCESS--to Main\");\r\n\t\t\t\tstartMainUIAndService();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 初始化配置app链接\r\n\t * @param mClientInitConfig\r\n\t */\r\n\tprivate void configConstantUrl(ClientInitConfig mClientInitConfig) {\r\n\t\tList<ClientInitConfig.AddressBean> mAddressList = mClientInitConfig.getAddressList();\r\n\t\tif (mAddressList.size() > 0) {\r\n\t\t\t//当前的登录地址\r\n\t\t\t//如果地址中没有添加端口，则补上默认端口号\r\n\t\t\tif (!mServiceAddress.contains(\":\")) {\r\n\t\t\t\tmServiceAddress = mServiceAddress+\":\"+Const.SERVER_PORT;\r\n\t\t\t}\r\n\t\t\t//V8的地址列表\r\n\t\t\tList<ClientInitConfig.AddressBean> v8AddressList = new ArrayList<ClientInitConfig.AddressBean>();\r\n\t\t\t//区分内外网\r\n\t\t\tfor (ClientInitConfig.AddressBean addressBean : mAddressList) {\r\n\t\t\t\tif (addressBean.getKey() != 1) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t//当key为1，登录的地址与初始化信息里的地址相等时\r\n\t\t\t\t//匹配出初始化信息里其他type与该地址type相等的地址，即区分开了内外网地址\r\n\t\t\t\tString tempAddr = \"\";\r\n\t\t\t\tif (addressBean.getIpaddress().contains(\":\")) {\r\n\t\t\t\t\ttempAddr = addressBean.getIpaddress();\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttempAddr = addressBean.getIpaddress()+\":\"+addressBean.getPort();\r\n\t\t\t\t}\r\n\t\t\t\tif (mServiceAddress.equals(tempAddr)) {\r\n\t\t\t\t\tint serviceType = addressBean.getType();\r\n\t\t\t\t\tfor (ClientInitConfig.AddressBean v8AddrBean : mAddressList) {\r\n\t\t\t\t\t\tif (serviceType == v8AddrBean.getType()) {\r\n\t\t\t\t\t\t\tv8AddressList.add(v8AddrBean);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//区分内外网之后的地址列表\r\n\t\t\tif (v8AddressList.size() > 0) {\r\n\t\t\t\tfor (ClientInitConfig.AddressBean addressBean : v8AddressList) {\r\n\t\t\t\t\tswitch (addressBean.getKey()) {\r\n\t\t\t\t\t\t//内网\r\n\t\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\t\tmApplication.CONFIG_INSIDE_IP = addressBean.getIpaddress()+\":\"+addressBean.getPort();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t//文件传输内网\r\n\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\tmApplication.CONFIG_INSIDE_FILE_TRANSLATE_IP = addressBean.getIpaddress()+\":\"+addressBean.getPort();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t//V8服务地址\r\n\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\tif (addressBean.getServer() != null && !addressBean.getServer().isEmpty()) {\r\n\t\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_URL = addressBean.getServer();\r\n//\t\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_URL = \"http://test219.ynedut.cn:81/ynedut/\";\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_URL = Const.PROTOCOL+addressBean.getIpaddress()+\":\"+addressBean.getPort()+\"/ynedut/\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//如果addressOf表没有配置该端口，直接引用IP\r\n\t\t\t\t\t\t\tif (TextUtils.isEmpty(addressBean.getPort()+\"\") || addressBean.getPort() == 0)\r\n\t\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_SERVICE_HOST = addressBean.getIpaddress();\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_SERVICE_HOST = addressBean.getIpaddress()+\":\"+addressBean.getPort();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t//从v8获取access_token\r\n\t\t\t\t\t\tcase 20:\r\n\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_TOKEN_URL = addressBean.getServer();\r\n//\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_TOKEN_URL = \"http://test219.ynedut.cn:81/ynedut/oauth/token.htm?client_id=yn-message&client_secret=yn-message-yn88888888yn&grant_type=password\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t//调转到V8指定页面\r\n\t\t\t\t\t\tcase 21:\r\n\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_APP_PAGE_URL = addressBean.getServer();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t//应用中心访问V8获取可用菜单\r\n\t\t\t\t\t\tcase 22:\r\n\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_APP_MENUS_URL = addressBean.getServer();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// 获取OA待办的地址\r\n\t\t\t\t\t\tcase 24:\r\n\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_EVENT_OA_URL = addressBean.getServer();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t//跳转OA详情的地址,pc端使用的\r\n\t\t\t\t\t\tcase 25:\r\n\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_EVENT_OA_DETAIL_URL = addressBean.getServer();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 26:\r\n\t\t\t\t\t\t\tmApplication.CONFIG_YNEDUT_V8_EVENT_V7OA_DETAIL_URL = addressBean.getServer();\r\n\t\t\t\t\t\t\tbreak;\r\n                        case 41:\r\n                            mApplication.CONFIG_LBS_URL_CONFIG = addressBean.getServer();\r\n                            break;\r\n                        case 42:\r\n                            //                        mApplication.CONFIG_LBS_URL_UPLOAD = addressBean.getServer();\r\n                            break;\r\n                        case 43:\r\n                            mApplication.CONFIG_LBS_URL_UPLOAD = addressBean.getServer();\r\n                            break;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/yineng/ynmessager/activity/LoginActivity.java	(revision 3225)
+++ app/src/main/java/com/yineng/ynmessager/activity/LoginActivity.java	(revision )
@@ -31,7 +31,6 @@
 import android.widget.PopupWindow;
 import android.widget.PopupWindow.OnDismissListener;
 import android.widget.TextView;
-
 import com.alibaba.fastjson.JSON;
 import com.yineng.ynmessager.R;
 import com.yineng.ynmessager.app.Const;
@@ -49,12 +48,20 @@
 import com.yineng.ynmessager.sharedpreference.LastLoginUserSP;
 import com.yineng.ynmessager.smack.ReqIQ;
 import com.yineng.ynmessager.smack.ReqIQResult;
+import com.yineng.ynmessager.util.AppUtils;
 import com.yineng.ynmessager.util.L;
 import com.yineng.ynmessager.util.NetWorkUtil;
 import com.yineng.ynmessager.util.SystemUtil;
 import com.yineng.ynmessager.util.TimeUtil;
 import com.yineng.ynmessager.util.ToastUtil;
-
+import org.greenrobot.eventbus.EventBus;
+import java.io.File;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
+import me.leolin.shortcutbadger.ShortcutBadger;
 import org.jivesoftware.smack.PacketListener;
 import org.jivesoftware.smack.filter.PacketTypeFilter;
 import org.jivesoftware.smack.packet.IQ;
@@ -64,16 +71,6 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
-
-import org.greenrobot.eventbus.EventBus;
-import me.leolin.shortcutbadger.ShortcutBadger;
-
 /**
  * Activity which displays a login screen to the user, offering registration as
  * well.
@@ -340,8 +337,12 @@
 		mDeleteAllTV.setText(getString(R.string.login_deleteAccountWithData));
 		mPopupWindow = new PopupWindow(mPhonePopView, LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT, true);
 		mLoginedUserAccountLV = new ListView(mContext);
+
+    ((TextView) findViewById(R.id.login_txt_versionText)).setText(
+        getString(R.string.about_currentVersionName,
+            UpdateCheckUtil.formatNewVersionToShow(AppUtils.getVersionName(this))));
 
-		initAnimation();
+    initAnimation();
 	}
 
 	/**
